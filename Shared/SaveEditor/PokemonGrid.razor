@using PKHeX.Core
@using PKHeX.Core.Editing
@using PKHeX.Core.Game
@using PKHeX.Core.Items
@using PKHeX.Core.PKM
@using PKHeX.Core.Moves
@using PKHeX.Core.Util
@using PKHeX.Core.Saves
@using PKHeX.Core.Resources
@using PKHeX.Core.PersonalInfo
@using PKHeX.Drawing
@using PKHeX.Drawing.Misc
@using PKHeX.Drawing.PokeSprite
@using PKHeX.WinForms
@inject PkmEdit PE;

<div style="--cols: @RowSize; --rows: @(Cells / RowSize)" class="pokegrid mx-auto">
  @for (var i = 0; i < Cells; i++)
  {
    var index = i;
    var pokemon = PokemonList.ElementAtOrDefault(index);
    <div @onclick="@(() => ChangePokemon(pokemon, index))">
      <PokemonWithItem Pokemon="pokemon" />
    </div>
  }
</div>

@code {
  [Parameter]
  public IList<PKM> PokemonList { get; set; } = new PKM[] { };
  [Parameter]
  public int RowSize { get; set; }
  [Parameter]
  public int Cells { get; set; }
  [Parameter]
  public Action<int> SetPokemon { get; set; } = (i) => throw new MissingMemberException();

  protected void ChangePokemon(PKM? pokemon, int index)
  {
    if (PE.IsSetLeft)
    {
      if (pokemon == null || pokemon.Species == 0) return;
      PE.PKM = pokemon.Clone();
    }
    else
    {
      SetPokemon(index);
    }
  }
}
